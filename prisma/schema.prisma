generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique @db.VarChar(50)
  password  String
  role      String   @default("staff") @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id            String         @id @default(uuid())
  code          String         @db.VarChar(2)
  name          String         @db.VarChar(7)
  itemCount     Int            @default(0)
  totalWeight   Decimal        @default(0) @db.Decimal(10, 3)
  goldContent   String
  minimumPrice  Float?
  groceries     Grocery[]
  incomingItems IncomingItem[]
  meltedItems   MeltedItem[]
  outgoingItems OutgoingItem[]
}

model Customer {
  id               String              @id @default(uuid())
  name             String              @db.VarChar(50)
  idNumber         String?
  address          String
  phoneNumber      String?             @db.VarChar(15)
  isSupplier       Boolean             @default(false)
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  incomingItems    IncomingItem[]
  outgoingItems    OutgoingItem[]
  services         Service[]
  mudaIncomingItems MudaIncomingItem[]
  mudaOutgoingItems MudaOutgoingItem[]

  @@index([name])
}

model Grocery {
  id            String         @id @default(uuid())
  code          String         @unique @db.VarChar(10)
  name          String
  categoryId    String
  tkr           String?        @db.VarChar(10)
  weight        Decimal        @db.Decimal(10, 3)
  price         Decimal        @db.Decimal(12, 2)
  isSold        Boolean        @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  category      Category       @relation(fields: [categoryId], references: [id])
  incomingItems IncomingItem[]
  outgoingItems OutgoingItem[]

  @@index([categoryId])
}

model IncomingItem {
  id           String        @id @default(uuid())
  code         String?       @db.VarChar(10)
  name         String?
  date         DateTime      @default(now())
  groceryCode  String?
  weight       Decimal?      @db.Decimal(10, 3)
  price        Decimal?      @db.Decimal(12, 2)
  categoryId   String
  customerId   String
  quantity     Int           @default(1)
  buyPrice     Decimal?      @db.Decimal(12, 2)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  source       String?       @db.VarChar(10)
  sellPrice    Decimal?      @db.Decimal(12, 2)
  category     Category      @relation(fields: [categoryId], references: [id])
  customer     Customer      @relation(fields: [customerId], references: [id])
  grocery      Grocery?      @relation(fields: [groceryCode], references: [code], onDelete: Restrict)
  washingItems WashingItem[]

  @@index([groceryCode])
  @@index([date])
  @@index([categoryId])
}

model OutgoingItem {
  id          String   @id @default(uuid())
  code        String   @unique
  date        DateTime @default(now())
  groceryCode String
  categoryId  String
  customerId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sellPrice   Decimal  @db.Decimal(12, 2)
  category    Category @relation(fields: [categoryId], references: [id])
  customer    Customer @relation(fields: [customerId], references: [id])
  grocery     Grocery  @relation(fields: [groceryCode], references: [code])

  @@index([groceryCode])
  @@index([categoryId])
}

model Service {
  id          String   @id @default(uuid())
  customerId  String
  date        DateTime @default(now())
  itemName    String   @db.VarChar(50)
  itemType    String   @db.VarChar(50)
  goldContent Decimal  @db.Decimal(4, 2)
  weight      Decimal  @db.Decimal(10, 3)
  price       Decimal  @db.Decimal(12, 2)
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@index([date, customerId])
}

model WashingItem {
  id             String       @id @default(uuid())
  incomingItemId String
  newCode        String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  isWashed       Boolean      @default(false)
  washedAt       DateTime?
  incomingItem   IncomingItem @relation(fields: [incomingItemId], references: [id], onDelete: Cascade)

  @@index([incomingItemId])
}

model DailySummary {
  id                        String   @id @default(uuid())
  date                      DateTime @unique @default(now()) @db.Date
  incomingRingWeight        Decimal  @default(0) @db.Decimal(10, 3)
  incomingRingQty           Int      @default(0)
  outgoingRingWeight        Decimal  @default(0) @db.Decimal(10, 3)
  outgoingRingQty           Int      @default(0)
  nonSaleRingWeight         Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleRingQty            Int      @default(0)
  totalRingWeight           Decimal  @default(0) @db.Decimal(10, 3)
  totalRingQty              Int      @default(0)
  incomingEarringWeight     Decimal  @default(0) @db.Decimal(10, 3)
  incomingEarringQty        Int      @default(0)
  outgoingEarringWeight     Decimal  @default(0) @db.Decimal(10, 3)
  outgoingEarringQty        Int      @default(0)
  nonSaleEarringWeight      Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleEarringQty         Int      @default(0)
  totalEarringWeight        Decimal  @default(0) @db.Decimal(10, 3)
  totalEarringQty           Int      @default(0)
  incomingNecklaceWeight    Decimal  @default(0) @db.Decimal(10, 3)
  incomingNecklaceQty       Int      @default(0)
  outgoingNecklaceWeight    Decimal  @default(0) @db.Decimal(10, 3)
  outgoingNecklaceQty       Int      @default(0)
  nonSaleNecklaceWeight     Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleNecklaceQty        Int      @default(0)
  totalNecklaceWeight       Decimal  @default(0) @db.Decimal(10, 3)
  totalNecklaceQty          Int      @default(0)
  incomingBraceletWeight    Decimal  @default(0) @db.Decimal(10, 3)
  incomingBraceletQty       Int      @default(0)
  outgoingBraceletWeight    Decimal  @default(0) @db.Decimal(10, 3)
  outgoingBraceletQty       Int      @default(0)
  nonSaleBraceletWeight     Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleBraceletQty        Int      @default(0)
  totalBraceletWeight       Decimal  @default(0) @db.Decimal(10, 3)
  totalBraceletQty          Int      @default(0)
  incomingPendantWeight     Decimal  @default(0) @db.Decimal(10, 3)
  incomingPendantQty        Int      @default(0)
  outgoingPendantWeight     Decimal  @default(0) @db.Decimal(10, 3)
  outgoingPendantQty        Int      @default(0)
  nonSalePendantWeight      Decimal  @default(0) @db.Decimal(10, 3)
  nonSalePendantQty         Int      @default(0)
  totalPendantWeight        Decimal  @default(0) @db.Decimal(10, 3)
  totalPendantQty           Int
  incomingStudEarringWeight Decimal  @default(0) @db.Decimal(10, 3)
  incomingStudEarringQty    Int      @default(0)
  outgoingStudEarringWeight Decimal  @default(0) @db.Decimal(10, 3)
  outgoingStudEarringQty    Int      @default(0)
  nonSaleStudEarringWeight  Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleStudEarringQty     Int      @default(0)
  totalStudEarringWeight    Decimal  @default(0) @db.Decimal(10, 3)
  totalStudEarringQty       Int      @default(0)
  incomingTotalWeight       Decimal  @default(0) @db.Decimal(10, 3)
  incomingTotalQty          Int      @default(0)
  outgoingTotalWeight       Decimal  @default(0) @db.Decimal(10, 3)
  outgoingTotalQty          Int      @default(0)
  nonSaleTotalWeight        Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleTotalQty           Int      @default(0)
  grandTotalWeight          Decimal  @default(0) @db.Decimal(10, 3)
  grandTotalQty             Int      @default(0)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  @@index([date])
}

model Finance {
  id                  String   @id @default(uuid())
  date                DateTime @unique @default(now()) @db.Date
  openingBalance      Decimal  @default(0) @db.Decimal(12, 2)
  outgoingItems       Decimal  @default(0) @db.Decimal(12, 2)
  incomingMoney       Decimal  @default(0) @db.Decimal(12, 2)
  incomingItems       Decimal  @default(0) @db.Decimal(12, 2)
  outgoingMoney       Decimal  @default(0) @db.Decimal(12, 2)
  totalIncome         Decimal  @default(0) @db.Decimal(12, 2)
  totalExpense        Decimal  @default(0) @db.Decimal(12, 2)
  closingBalance      Decimal  @default(0) @db.Decimal(12, 2)
  storeClosingBalance Decimal? @db.Decimal(12, 2)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([date])
}

model Income {
  id          String   @id @default(uuid())
  description String
  amount      Decimal  @db.Decimal(12, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Expense {
  id          String   @id @default(uuid())
  description String
  amount      Decimal  @db.Decimal(12, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Operational {
  id          String   @id @default(uuid())
  description String
  amount      Decimal  @db.Decimal(12, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MeltedItem {
  id         String   @id @default(uuid())
  date       DateTime @default(now())
  code       String?  @db.VarChar(10)
  categoryId String
  weight     Decimal  @db.Decimal(10, 3)
  quantity   Int      @default(1)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  category   Category @relation(fields: [categoryId], references: [id])

  @@index([date])
  @@index([categoryId])
}

model GroceryService {
  id          String    @id @default(uuid())
  customer    String    @db.VarChar(50)
  phoneNumber String?   @db.VarChar(15)
  address     String?
  jewelryName String?   @db.VarChar(50)
  weight      Decimal?  @db.Decimal(10, 3)
  description String
  ongkos      Decimal?  @db.Decimal(12, 2)
  isDone      Boolean   @default(false)
  createdAt   DateTime  @default(now())
  doneAt      DateTime?
  updatedAt   DateTime  @updatedAt

  @@index([createdAt])
}

model LeburHistory {
  id        Int      @id @default(autoincrement())
  category  String
  quantity  Int
  weight    Float
  code      String?
  createdAt DateTime @default(now())
  notes     String?
}

// Emas Muda Tables (Separate tables for young gold transactions)
model MudaCategory {
  id               String              @id @default(uuid())
  code             String              @db.VarChar(2)
  name             String              @db.VarChar(7)
  itemCount        Int                 @default(0)
  totalWeight      Decimal             @default(0) @db.Decimal(10, 3)
  goldContent      String
  minimumPrice     Float?
  mudaGroceries    MudaGrocery[]
  mudaIncomingItems MudaIncomingItem[]
  mudaMeltedItems  MudaMeltedItem[]
  mudaOutgoingItems MudaOutgoingItem[]
}

model MudaGrocery {
  id               String              @id @default(uuid())
  code             String              @unique @db.VarChar(10)
  name             String
  categoryId       String
  tkr              String?             @db.VarChar(10)
  weight           Decimal             @db.Decimal(10, 3)
  price            Decimal             @db.Decimal(12, 2)
  isSold           Boolean             @default(false)
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  category         MudaCategory        @relation(fields: [categoryId], references: [id])
  mudaIncomingItems MudaIncomingItem[]
  mudaOutgoingItems MudaOutgoingItem[]

  @@index([categoryId])
}

model MudaIncomingItem {
  id              String            @id @default(uuid())
  code            String?           @db.VarChar(10)
  name            String?
  date            DateTime          @default(now())
  groceryCode     String?
  weight          Decimal?          @db.Decimal(10, 3)
  price           Decimal?          @db.Decimal(12, 2)
  categoryId      String
  customerId      String
  quantity        Int               @default(1)
  buyPrice        Decimal?          @db.Decimal(12, 2)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  source          String?           @db.VarChar(10)
  sellPrice       Decimal?          @db.Decimal(12, 2)
  category        MudaCategory      @relation(fields: [categoryId], references: [id])
  customer        Customer          @relation(fields: [customerId], references: [id])
  grocery         MudaGrocery?      @relation(fields: [groceryCode], references: [code], onDelete: Restrict)
  mudaWashingItems MudaWashingItem[]

  @@index([groceryCode])
  @@index([date])
  @@index([categoryId])
}

model MudaOutgoingItem {
  id          String       @id @default(uuid())
  code        String       @unique
  date        DateTime     @default(now())
  groceryCode String
  categoryId  String
  customerId  String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  sellPrice   Decimal      @db.Decimal(12, 2)
  category    MudaCategory @relation(fields: [categoryId], references: [id])
  customer    Customer     @relation(fields: [customerId], references: [id])
  grocery     MudaGrocery  @relation(fields: [groceryCode], references: [code])

  @@index([groceryCode])
  @@index([categoryId])
}

model MudaWashingItem {
  id                 String           @id @default(uuid())
  mudaIncomingItemId String
  newCode            String?
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  isWashed           Boolean          @default(false)
  washedAt           DateTime?
  mudaIncomingItem   MudaIncomingItem @relation(fields: [mudaIncomingItemId], references: [id], onDelete: Cascade)

  @@index([mudaIncomingItemId])
}

model MudaMeltedItem {
  id         String       @id @default(uuid())
  date       DateTime     @default(now())
  code       String?      @db.VarChar(10)
  categoryId String
  weight     Decimal      @db.Decimal(10, 3)
  quantity   Int          @default(1)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  category   MudaCategory @relation(fields: [categoryId], references: [id])

  @@index([date])
  @@index([categoryId])
}

model MudaDailySummary {
  id                        String   @id @default(uuid())
  date                      DateTime @unique @default(now()) @db.Date
  incomingRingWeight        Decimal  @default(0) @db.Decimal(10, 3)
  incomingRingQty           Int      @default(0)
  outgoingRingWeight        Decimal  @default(0) @db.Decimal(10, 3)
  outgoingRingQty           Int      @default(0)
  nonSaleRingWeight         Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleRingQty            Int      @default(0)
  totalRingWeight           Decimal  @default(0) @db.Decimal(10, 3)
  totalRingQty              Int      @default(0)
  incomingEarringWeight     Decimal  @default(0) @db.Decimal(10, 3)
  incomingEarringQty        Int      @default(0)
  outgoingEarringWeight     Decimal  @default(0) @db.Decimal(10, 3)
  outgoingEarringQty        Int      @default(0)
  nonSaleEarringWeight      Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleEarringQty         Int      @default(0)
  totalEarringWeight        Decimal  @default(0) @db.Decimal(10, 3)
  totalEarringQty           Int      @default(0)
  incomingNecklaceWeight    Decimal  @default(0) @db.Decimal(10, 3)
  incomingNecklaceQty       Int      @default(0)
  outgoingNecklaceWeight    Decimal  @default(0) @db.Decimal(10, 3)
  outgoingNecklaceQty       Int      @default(0)
  nonSaleNecklaceWeight     Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleNecklaceQty        Int      @default(0)
  totalNecklaceWeight       Decimal  @default(0) @db.Decimal(10, 3)
  totalNecklaceQty          Int      @default(0)
  incomingBraceletWeight    Decimal  @default(0) @db.Decimal(10, 3)
  incomingBraceletQty       Int      @default(0)
  outgoingBraceletWeight    Decimal  @default(0) @db.Decimal(10, 3)
  outgoingBraceletQty       Int      @default(0)
  nonSaleBraceletWeight     Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleBraceletQty        Int      @default(0)
  totalBraceletWeight       Decimal  @default(0) @db.Decimal(10, 3)
  totalBraceletQty          Int      @default(0)
  incomingPendantWeight     Decimal  @default(0) @db.Decimal(10, 3)
  incomingPendantQty        Int      @default(0)
  outgoingPendantWeight     Decimal  @default(0) @db.Decimal(10, 3)
  outgoingPendantQty        Int      @default(0)
  nonSalePendantWeight      Decimal  @default(0) @db.Decimal(10, 3)
  nonSalePendantQty         Int      @default(0)
  totalPendantWeight        Decimal  @default(0) @db.Decimal(10, 3)
  totalPendantQty           Int
  incomingStudEarringWeight Decimal  @default(0) @db.Decimal(10, 3)
  incomingStudEarringQty    Int      @default(0)
  outgoingStudEarringWeight Decimal  @default(0) @db.Decimal(10, 3)
  outgoingStudEarringQty    Int      @default(0)
  nonSaleStudEarringWeight  Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleStudEarringQty     Int      @default(0)
  totalStudEarringWeight    Decimal  @default(0) @db.Decimal(10, 3)
  totalStudEarringQty       Int      @default(0)
  incomingTotalWeight       Decimal  @default(0) @db.Decimal(10, 3)
  incomingTotalQty          Int      @default(0)
  outgoingTotalWeight       Decimal  @default(0) @db.Decimal(10, 3)
  outgoingTotalQty          Int      @default(0)
  nonSaleTotalWeight        Decimal  @default(0) @db.Decimal(10, 3)
  nonSaleTotalQty           Int      @default(0)
  grandTotalWeight          Decimal  @default(0) @db.Decimal(10, 3)
  grandTotalQty             Int      @default(0)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  @@index([date])
}
